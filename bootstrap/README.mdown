# Bootstrap compiler

Acute is bootstrapped so that we can write the language in ourself. While it's true, we could just use (Steve Dekorte's IoVM](http://iolanguage.com/)
that was seen as less than ideal. What happens if Steve's VM goes away? How do people look at a language written in itself, that is
dependent on a competing VM to compile? Silliness!

The truth of the matter is we can build an IoVM fairly easily, and as such, the cost/benefit of using someone elses VM versus building
our own, is high. As such, the choice is clear.

We build the C version to build the full IoVM. The full IoVM will be a binary which can be used to build another full IoVM which should
generate the same code as the previous version. Thus, we can visualize this as a flow chart:

C bootstrap -> Full IoVM
               |
               ---> Full IoVM
                    |
                    ---> Full IoVM

and so on. We need to make sure that we build a binary that is executable on your system so that we don't need another interpreter to
run the full IoVM with.

So those are the goals of our bootstrapping process.

The result of the full vm compiling itself will be LLVM IR which will replace the bootstrap. You can find this generated code (if it
exists at the time you read this) in the **llvm** subdirectory. For historical purposes, we'll leave the C bootstrap kicking around in
the **c** directory.
