#! /usr/bin/env ruby
# -*- ruby -*- 
# emacs Time-stamp: <Jun 23 2002 18:28:58 Basile STARYNKEVITCH hector.lesours>
# prcsid $Id: gen_makers 25 2005-07-08 08:54:46Z basile $
def process(inputfile, outputfile) 
  tuplemakers = [ ] 
  vectmakers = [ ]
  IO.foreach(inputfile) do |line|
    line.gsub(/\bruk_make_tuple_([1-9][0-9]*)\b/) do |nam| 
      nb = Integer($1)
      tuplemakers[nb] = nam;
    end
    line.gsub(/\bruk_make_vector_([1-9][0-9]*)\b/) do |nam| 
      nb = Integer($1)
      vectmakers[nb] = nam;
    end
  end
  File.rename(outputfile, outputfile+"~") if FileTest.exists?(outputfile)
  open (outputfile, "w") do |outf|
    outf.printf("/* file %s generated at %s from %s */\n", outputfile, Time.now, inputfile)
    outf.printf("/* DON'T EDIT */\n")
    tuplemakers.each_index do |ix|
      nam = tuplemakers[ix]
      next if (nam == nil) 
      outf.printf("// making tuple %d\nstatic inline void*\n%s(", ix, nam)
      for i in 1 .. ix do
	outf.printf("void* volatile p%d", i)
	outf.printf(", ") if i<ix
      end
      outf.printf(") {\n  struct ktuple_t* volatile res=0;\n")
      outf.printf("  BEGIN_SIMPLE_FRAME(%d,p1,1,res);\n", ix)
      outf.printf("  res = (struct ktuple_t*)qish_allocate(sizeof(struct ktuple_t)+%d*sizeof(void*));\n", ix)
      outf.printf("  res->header = MAKEHEADER(KIND_TUPLE,%d);\n", ix)
      for j in 1 .. ix do 
	outf.printf("  res->tab[%d] = p%d;\n", j-1, j)
      end
      outf.printf("  EXIT_FRAME();\n")
      outf.printf("  return res;\n}\n\n")
    end
    vectmakers.each_index do |ix|
      nam = vectmakers[ix]
      next if (nam == nil) 
      outf.printf("// making vector %d\nstatic inline void*\n%s(", ix, nam)
      for i in 1 .. ix do
	outf.printf("void* volatile p%d", i)
	outf.printf(", ") if i<ix
      end
      outf.printf(") {\n  struct ktuple_t* volatile res=0;\n")
      outf.printf("  BEGIN_SIMPLE_FRAME(%d,p1,1,res);\n", ix)
      outf.printf("  res = (struct ktuple_t*)qish_allocate(sizeof(struct ktuple_t)+%d*sizeof(void*));\n", ix)
      outf.printf("  res->header = MAKEHEADER(KIND_VECTOR,%d);\n", ix)
      for j in 1 .. ix do 
	outf.printf("  res->tab[%d] = p%d;\n", j-1, j)
      end
      outf.printf("  EXIT_FRAME();\n")
      outf.printf("  return res;\n}\n\n")
    end
  end
end

inputfile= $*[0]
outputfile= $*[1]
process(inputfile, outputfile)	
# eof $Id: gen_makers 25 2005-07-08 08:54:46Z basile $
